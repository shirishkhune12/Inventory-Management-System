CREATE DATABASE INVENTORY;
USE INVENTORY;

CREATE TABLE SUPPLIER(
SPID CHAR(5) NOT NULL PRIMARY KEY,
SNAME VARCHAR(20) NOT NULL,
SADD VARCHAR(50) NOT NULL,
SCITY CHAR(5) CHECK(SCITY='DELHI'),
SPHONE CHAR(10) UNIQUE,
EMAIL VARCHAR(30)
)

CREATE TABLE PRODUCT(
PID CHAR(5) NOT NULL PRIMARY KEY,
PDESC VARCHAR(50) NOT NULL,
PRICE FLOAT CHECK(PRICE>0),
CATEGORY CHAR(2) CHECK(CATEGORY IN ('IT','HA','HC')),  --IT(INFORMATION TECHNOLOGY), HC(HEALTH CARE), HA(HOME APPLIANCES)
SPID CHAR(5) REFERENCES SUPPLIER(SPID)
)


CREATE TABLE CUST(
CID CHAR(5) NOT NULL PRIMARY KEY,
CNAME VARCHAR(20) NOT NULL,
ADDR VARCHAR(50) NOT NULL,
CITY VARCHAR(20) NOT NULL,
PHONE CHAR(14) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
DOB DATE CHECK(DOB<'01-JAN-2000') 
)

CREATE TABLE ORDERS(
OID CHAR(5) NOT NULL PRIMARY KEY,
ODATE DATE,
CID CHAR(5) REFERENCES CUST(CID),
PID CHAR(5) REFERENCES PRODUCT(PID),
OQTY INT CHECK(OQTY>=1)
)

CREATE TABLE STOCK(
PID CHAR(5) REFERENCES PRODUCT(PID),
SQTY INT CHECK(SQTY>=0),
ROL INT CHECK(ROL>0),
MOQ INT CHECK(MOQ>=5)
)

CREATE TABLE PURCHASE(                 --THIS TABLE IS NOT TO BE FILLED MANUALLY. IT WILL BE FILLED WHEN THE TRIGGER FIRES.
PID CHAR(5),
SPID CHAR(5),
PQTY INT,
DOP DATE)

--*******************************************************************************************************************************************

/* CREATION OF FUNCTION FOR AUTO GENERATION OF 5 CHARACTERS ALPHANUMERIC ID. IT SHOULD ACCEPT 2 PARAMETERS: 
A CHARACTER AND THE NUMBER AND RETURN ID BY CONCATENATING THE CHARACTER, REQUIRED ZEROS AND THE SPECIFIED NUMBER */

CREATE FUNCTION GENID (@C CHAR(1), @N INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SELECT @ID = CASE
		WHEN @N<10 THEN CONCAT(@C,'000',@N)
		WHEN @N<100 THEN CONCAT(@C,'00',@N)
		WHEN @N<1000 THEN CONCAT(@C,'0',@N)
		WHEN @N<10000 THEN CONCAT(@C,@N)
		ELSE 'NA'
	END;

	RETURN @ID;
END;

--******************************************************************************************************************************************

-- CREATION OF DIFFERENT PROCEDURES SO THAT THE INSERTION OF RECORDS BECOME EASY FOR THE USER

--1. ADDSUPPLIER : SHOULD ADD THE SUPPLIER IN THE SUPPLIER TABLE AND DISPLAY THE DETAILS OF THE NEW SUPPLIER ADDED

CREATE SEQUENCE SUPPSEQ
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDSUPPLIER
@SNAME VARCHAR(20), @SADD VARCHAR(50), @SCITY CHAR(5), @SPHONE CHAR(10), @EMAIL VARCHAR(30)
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SET @ID = DBO.GENID('S',NEXT VALUE FOR SUPPSEQ);

	INSERT INTO SUPPLIER VALUES
	(@ID, @SNAME, @SADD, @SCITY, @SPHONE, @EMAIL);

	SELECT * FROM SUPPLIER WHERE SPID=@ID;
END;


--2. ADDPRODUCT : SHOULD ADD THE PRODUCT IN THE PRODUCT TABLE AND DISPLAY THE DETAILS OF THE NEW PRODUCT ADDED

CREATE SEQUENCE PROSEQ
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDPRODUCT
@PDESC VARCHAR(50), @PRICE FLOAT, @CATEGORY CHAR(2), @SPID CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SET @ID = DBO.GENID('P',NEXT VALUE FOR PROSEQ);

	INSERT INTO PRODUCT VALUES
	(@ID, @PDESC, @PRICE, @CATEGORY, @SPID);

	SELECT * FROM PRODUCT WHERE PID=@ID;
END;


-- 3.ADDCUSTOMER : SHOULD ADD THE CUSTOMER IN THE CUSTOMER TABLE AND DISPLAY THE DETAILS OF THE NEW CUSTOMER ADDED

CREATE SEQUENCE CUSTSEQ
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDCUSTOMER
@CNAME VARCHAR(20), @ADDR VARCHAR(50), @CITY VARCHAR(20), @PHONE CHAR(14), @EMAIL VARCHAR(30), @DOB DATE
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SET @ID = DBO.GENID('C',NEXT VALUE FOR CUSTSEQ);

	INSERT INTO CUST VALUES
	(@ID, @CNAME, @ADDR, @CITY, @PHONE, @EMAIL, @DOB);

	SELECT * FROM CUST WHERE CID=@ID;
END;


--4. ADDORDER : SHOULD ADD THE ORDER IN THE ORDERS TABLE AND DISPLAY THE DETAILS OF THE ORDER. ORDER DATE SHOULD BE CURRENT DATE AND SHOULD COME AUTOMATICALLY

CREATE SEQUENCE ORDSEQ
AS INT
START WITH 1
INCREMENT BY 1;

CREATE PROCEDURE ADDORDER
@CID CHAR(5), @PID CHAR(5), @OQTY INT
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SET @ID = DBO.GENID('O',NEXT VALUE FOR ORDSEQ);

	INSERT INTO ORDERS VALUES
	(@ID, GETDATE(), @CID, @PID, @OQTY);

	SELECT * FROM ORDERS WHERE OID=@ID;
END;

--5. ADDSTOCK : SHOULD ADD THE STOCK IN STOCK TABLE AND DISPLAY DETAILS OF THE NEWLY ADDED STOCK

CREATE PROCEDURE ADDSTOCK
@PID CHAR(5), @SQTY INT, @ROL INT, @MOQ INT
AS
BEGIN
	INSERT INTO STOCK VALUES
	(@PID, @SQTY, @ROL, @MOQ);
	
	SELECT * FROM STOCK WHERE PID=@PID;
END;

--***************************************************************************************************************************************************

/* TRIGGERS: WE WILL NEED CERTAIN TRIGGERS TO MAKE CHANGES IN THE STOCK TABLE WHENEVER AN ORDER IS INSERTED OR UPDATED IN THE ORDERS TABLE. THE 
ORDER SHOULD NOT BE PLACED WHEN ORDER QUANTITY IS GREATER THAN STOCK QUANTITY. ALSO, WHENEVER STOCK QUANTITY FALLS BELOW ROL (RE ORDER LEVEL),
AN ORDER SHOULD BE PLACED IN THE PURCHASE TABLE */


--1. INSERT TRIGGER

CREATE TRIGGER TR_IN_ORD
ON ORDERS FOR INSERT
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @QR AS INT;  --QUANTITY REQUIRED
	DECLARE @QS AS INT;  --QUANTITY IN STOCK
	DECLARE @ROL AS INT; --REORDER LEVEL
	DECLARE @PID AS CHAR(5);
	DECLARE @SPID AS CHAR(5);
	DECLARE @MOQ AS INT;

	SET @PID = (SELECT PID FROM INSERTED);
	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = @PID);
	SET @ROL = (SELECT ROL FROM STOCK WHERE PID = @PID);
	SET @SPID = (SELECT SPID FROM PRODUCT WHERE PID = @PID);
	SET @MOQ = (SELECT MOQ FROM STOCK WHERE PID = @PID);

	IF @QS>=@QR
		BEGIN
			IF @QS-@QR<=@ROL
				INSERT INTO PURCHASE VALUES (@PID, @SPID, @MOQ, GETDATE());
				
			UPDATE STOCK SET SQTY=SQTY-@QR WHERE PID=@PID;

			COMMIT;
			PRINT('ORDER ACCEPTED');
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('ORDER REJECTED');
		END;
END;


--2. UPDATE TRIGGER

CREATE TRIGGER TR_UP_ORD
ON ORDERS FOR UPDATE
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @OQ AS INT;  --OLD QUANTITY
	DECLARE @NQ AS INT;  --NEW QUANTITY
	DECLARE @QS AS INT;  --QUANTITY IN STOCK
	DECLARE @PID AS CHAR(5);
	DECLARE @SPID AS CHAR(5);
	DECLARE @ROL AS INT; --REORDER LEVEL
	DECLARE @MOQ AS INT;

	SET @PID = (SELECT PID FROM INSERTED);
	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
	SET @SPID = (SELECT SPID FROM PRODUCT WHERE PID = @PID);
	SET @ROL = (SELECT ROL FROM STOCK WHERE PID = @PID);
	SET @MOQ = (SELECT MOQ FROM STOCK WHERE PID = @PID);

	IF @QS>=@NQ-@OQ
		BEGIN
			IF @QS+@OQ-@NQ  <= @ROL
				INSERT INTO PURCHASE VALUES (@PID, @SPID, @MOQ, GETDATE()); 
				
			UPDATE STOCK SET SQTY = SQTY+@OQ-@NQ WHERE PID= (SELECT PID FROM INSERTED);

			COMMIT;
			PRINT('ORDER UPDATED');
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('ORDER UPDATE REJECTED');
		END;

END;



--****************************************************************************************************************************************************

-- INSERTION OF RECORDS INTO SUPPLIER TABLE

ADDSUPPLIER 'ANIKET SHARMA', 'ROHINI WEST', 'DELHI', '7832546196', 'ASHARMA@GMAIL.COM';

ADDSUPPLIER 'NAINA GUPTA', 'PITAM PURA', 'DELHI', '9756327812', 'NAINA156@YAHOO.COM';

ADDSUPPLIER 'BASANT KUMAR', 'JANAK PURI', 'DELHI', '7834656196', 'BK1886@GMAIL.COM';

ADDSUPPLIER 'TANMAY MALHOTRA', 'SECTOR 15, DWARKA', 'DELHI', '7832576496', 'TANMAY@YAHOO.CO.IN';

ADDSUPPLIER 'MINA KHANDELWAL', 'VASANT KUNJ', 'DELHI', '8653278914', 'MINA21@GMAIL.COM';

ADDSUPPLIER 'ANISH SAINI', 'SECTOR 21, DWARKA', 'DELHI', '6728916781', 'SAINIA@GMAIL.COM';

ADDSUPPLIER 'CHIRAG KOHLI', 'MODEL TOWN', 'DELHI', '7835217659', NULL;



-- INSERTION OF RECORDS INTO THE PRODUCT TABLE

ADDPRODUCT 'WOK', 1500, 'HA', 'S0003';

ADDPRODUCT 'OXOMETER', 400, 'HC', 'S0001';

ADDPRODUCT 'WEIGHING SCALE', 120, 'HC', 'S0001';

ADDPRODUCT 'WASHING MACHINE', 18000, 'HA', 'S0004';

ADDPRODUCT 'MIXER', 700, 'HA', 'S0003';

ADDPRODUCT 'KEYBOARD', 420, 'IT', 'S0006';

ADDPRODUCT 'LAPTOP CHARGER', 570, 'IT', 'S0006';

ADDPRODUCT 'LG TELEVISION', 15000, 'HA', 'S0004';

ADDPRODUCT 'THERMOMETER', 220, 'HC', 'S0002';

ADDPRODUCT 'HEATING BAG', 250, 'HC', 'S0002';

ADDPRODUCT 'FRYING PAN', 780, 'HA', 'S0003';

ADDPRODUCT 'PEN DRIVE', 490, 'IT', 'S0006';

ADDPRODUCT 'HEADPHONES', 1100, 'IT', 'S0006';

ADDPRODUCT 'MASSAGE GUN', 730, 'HC', 'S0001';

ADDPRODUCT 'BP CHECKING MACHINE', 560, 'HC', 'S0001';

ADDPRODUCT 'MOUSE', 435, 'IT', 'S0006';



-- INSERTION OF RECORDS INTO THE CUST TABLE

ADDCUSTOMER 'PUJA SHARMA', 'SECTOR 22', 'GURGAON', '9757648931', 'PS@GMAIL.COM', '29-AUG-1994';

ADDCUSTOMER 'SUMAN KHANDELWAL', 'ASHOK VIHAR', 'ALWAR', '7654927891', 'SUMAN@YAHOO.COM', '21-SEP-1983';

ADDCUSTOMER 'ANIKET TYAGI', 'SECTOR 23A', 'GURGAON', '6789125678', 'ATYAGI@GMAIL.COM', '12-JUN-1995';

ADDCUSTOMER 'JOEL JOHN', 'JANAK PURI', 'DELHI', '8756065824', 'JOHNJ@GMAIL.COM', '09-NOV-1996';

ADDCUSTOMER 'NIMISHA AGRAWAL', 'KARAMCHARI COLONY', 'ALWAR', '8233567843', 'NIMISHA@GMAIL.COM', '21-NOV-1998';

ADDCUSTOMER 'DIPESH SAINI', 'PALAM VIHAR', 'GURGAON', '8757291867', 'SAINIDIPESH@YAHOO.CO.IN', '14-JUL-1987';



-- INSERTION OF RECORDS INTO STOCK TABLE

ADDSTOCK 'P0012', 80, 10, 100;

ADDSTOCK 'P0009', 50, 15, 200;

ADDSTOCK 'P0001', 30, 10, 70;

ADDSTOCK 'P0007', 160, 20, 150;

ADDSTOCK 'P0005', 25, 8, 40;

ADDSTOCK 'P0011', 32, 5, 10;

ADDSTOCK 'P0016', 20, 7, 10;

ADDSTOCK 'P0003', 43, 5, 15;

ADDSTOCK 'P0004', 21, 6, 20;


-- INSERTION OF RECORDS INTO ORDERS TABLE

ADDORDER 'C0002', 'P0012', 2;

ADDORDER 'C0002', 'P0001', 1;

ADDORDER 'C0004', 'P0012', 1;

ADDORDER 'C0003', 'P0009', 3;

ADDORDER 'C0001', 'P0007', 5;

ADDORDER 'C0005', 'P0001', 20;

--**************************************************************************************************************************************************

-- QUERY TO DISPLAY THE PRODUCT DETAILS AND CORRESPONDING SELLER

SELECT PID, PDESC, CATEGORY, SNAME, SCITY
FROM PRODUCT INNER JOIN SUPPLIER ON PRODUCT.SPID = SUPPLIER.SPID;



-- QUERY TO DISPLAY ORDER DETAILS FOR A PARTICULAR ORDER

SELECT OID, ODATE, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID;



-- WE CAN ALSO CREATE A VIEW FOR THE ABOVE QUERY AS BILL. NO NEED TO WRITE THE QUERY AGAIN AND AGAIN, JUST RETRIEVE THE CONTENTS FROM VIEW BILL.

CREATE VIEW BILL AS
SELECT OID, ODATE, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID;

SELECT * FROM BILL;

--********************************************************************************************************************************************************

--CREATION OF PROCEDURES FOR REPORTING

--1. DAILY REPORT : THIS PROCEDURE WILL DISPLAY ALL THE TRANSACTIONS MADE DURING THE DAY.

CREATE PROCEDURE DAILY_REPORT
AS
BEGIN 
	SELECT OID, ODATE, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
	FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
	INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID WHERE ODATE=CAST(GETDATE() AS DATE);
END;

DAILY_REPORT;

--2. CUSTOMER('CID') : THIS PROCEDURE WILL DISPLAY ALL THE TRANSACTIONS MADE BY A PARTICULAR CUSTOMER

CREATE PROCEDURE CUSTOMER
@CID AS CHAR(5)
AS
BEGIN
	SELECT OID, ODATE, ORDERS.CID, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, ORDERS.PID, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
	FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
	INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID WHERE ORDERS.CID=@CID;
END;

CUSTOMER 'C0002';

--3. PRODUCT REPORT('PID') : THIS PROCEDURE WILL DISPLAY ALL TRANSACTIONS DONE FOR A PARTICULAR PRODUCT

CREATE PROCEDURE PRODUCT_REPORT
@PID AS CHAR(5)
AS
BEGIN
	SELECT OID, ODATE, ORDERS.CID, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, ORDERS.PID, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
	FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
	INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID WHERE ORDERS.PID=@PID;
END;

PRODUCT_REPORT 'P0001';

--4. SUPPLIER REPORT('SPID') : THIS PROCEDURE WILL DISPLAY ALL PRODUCTS SUPPLIED BY A PARTICULAR SUPPLIER

CREATE PROCEDURE SUPPLIER_REPORT
@SPID AS CHAR(5)
AS
BEGIN
	SELECT PID, PDESC, PRICE, CATEGORY, PRODUCT.SPID, SNAME, SPHONE 
	FROM PRODUCT INNER JOIN SUPPLIER ON PRODUCT.SPID=SUPPLIER.SPID
	WHERE PRODUCT.SPID=@SPID;
END;

SUPPLIER_REPORT 'S0003';

--5. ORDERS BETWEEN('DATE1', 'DATE2') : THIS PROCEDURE WILL DISPLAY ALL THE TRANSACTIONS MADE BETWEEN DATE1 AND DATE2

CREATE PROCEDURE ORDERS_BETWEEN
@DATE1 DATE, @DATE2 DATE
AS
BEGIN
	SELECT OID, ODATE, CNAME, CONCAT(ADDR,', ',CITY) ADDRESS, PHONE, PDESC, PRICE, OQTY, PRICE*OQTY AS TOTAL_AMOUNT
	FROM ORDERS INNER JOIN CUST ON ORDERS.CID=CUST.CID
	INNER JOIN PRODUCT ON ORDERS.PID=PRODUCT.PID WHERE ODATE BETWEEN @DATE1 AND @DATE2;
END;

ORDERS_BETWEEN '21-JUN-2021', '23-JUN-2021';